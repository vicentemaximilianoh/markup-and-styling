/**
 * Reset
 */

html, body {
    padding: 0;
    margin: 0;
}

/**
 * General styles
 */

header, nav, main, aside, footer {
    padding: 10px;
    border: 1px solid black;
}

.topic {
    padding: 40px 0;
}

/**
 * Inline vs inline-block vs block
 */

.particular-box {
    width: 100px;
    height: 100px;
    margin: 10px;
    border: 1px solid red;
}

/**
 * Transition
 */

.transitioned-box {
    width: 100px;
    height: 100px;
    background: red;
    transition:
        width 2s,
        height 3s ease 1s,
        background 2s ease-in,
        color 1.5s ease-in-out 4s;
}

.transitioned-box:hover {
    width: 200px;
    height: 200px;
    background: green;
    color: white;
}

/**
 * Transform
 */

.transformed-box {
    display: inline-block;
    width: 50px;
    height: 50px;
    margin: 10px;
    background: red;
    transition: transform 2s;
}

.transformed-box.rotate:hover {
    transform: rotate(60deg)
}

.transformed-box.translate:hover {
    transform: translate(50px, 100px)
}

.transformed-box.scale:hover {
    transform: scale(2, 3)
}

.transformed-box.skew:hover {
    transform: skew(20deg, 30deg)
}

/* matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY()) */
.transformed-box.matrix:hover {
    transform: matrix(2, 0.2, 0.3, 1.5, 50, 100)
}

.transformed-box.rotate3d:hover {
    transform: rotate3d(200, 300, 300, 60deg)
}

.transformed-box.translate3d:hover {
    transform: translate3d(50px, 30px, 100px)
}

.transformed-box.scale3d:hover {
    transform: scale3d(2, 1.5, 3)
}

/**
 * Grid layout
 */

/* Grid items */
header {
    grid-area: header
}

nav {
    grid-area: nav
}

main {
    grid-area: main
}

aside {
    grid-area: aside
}

footer {
    grid-area: footer
}

/* Grid container */
body {
    display: grid;

    /* grid lines and track distribution */
    grid-template-columns: auto;
    grid-template-rows: 80px auto auto auto 50px;

    /* grid-areas must be defined before this rule. */
    grid-template-areas:
        "header"
        "nav"
        "main"
        "aside"
        "footer";

    /* grid gaps */
    grid-column-gap: 0;
    grid-row-gap: 1px;



    /*item distribution */
    justify-items: stretch;
    align-items: stretch;

    /* content distribution */
    justify-content: stretch;
    align-content: start;
}

/* Grid areas */
header {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 2;
}

nav {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 2;
    grid-row-end: 3;
}

main {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 3;
    grid-row-end: 4;
}

aside {

    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 4;
    grid-row-end: 5;
}

footer {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 5;
    grid-row-end: 6;
}

/**
 * Flexbox
 */

 nav {
     padding: 10px;
 }

nav ul {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    /* Align content accros main axis. */
    justify-content: flex-start;

    /* Align items in opossite axis */
    align-items: flex-end;

    /* Align content between multiple lines */
    align-content: flex-start;

    height: 100%;
    padding: 0;
    margin: 0;
}

nav ul li {

    list-style-type: none;
    padding: 10px;
}

/**
 * Box-sizing
 */

.box {
    background: red;
    max-width: 500px;
    height: 100px;
    padding: 10px;
    border: 5px solid orange;
    margin: 10px;
}

.content-box {
    box-sizing: content-box;
}

.content-border {
    box-sizing: border-box;
}

/**
 * Responsive web design
 */

 @media screen and (min-width: 600px) {
    body {

        /* grid lines and track distribution */
        grid-template-columns: 75% 25%;
        grid-template-rows: 80px auto auto auto 50px;

        /* grid-areas must be defined before this rule. */
        grid-template-areas:
            "header header"
            "nav nav"
            "main aside"
            "footer footer";

        /* grid gaps */
        grid-column-gap: 2px;
        grid-row-gap: 2px;
    }

    /* Grid areas */
    header {
        grid-column-start: 1;
        grid-column-end: 3;
        grid-row-start: 1;
        grid-row-end: 2;
    }

    nav {
        grid-column-start: 1;
        grid-column-end: 3;
        grid-row-start: 2;
        grid-row-end: 3;
    }

    main {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 3;
        grid-row-end: 4;
    }

    aside {

        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 3;
        grid-row-end: 4;
    }

    footer {
        grid-column-start: 1;
        grid-column-end: 3;
        grid-row-start: 4;
        grid-row-end: 5;
    }
}

@media screen and (min-width: 768px) {
    body {

        /* grid lines and track distribution */
        grid-template-columns: 20% 60% 20%;
        grid-template-rows: 80px auto 50px;

        /* grid-areas must be defined before this rule. */
        grid-template-areas:
            "header header header"
            "nav main aside"
            "aside footer footer";

        /* grid gaps */
        grid-column-gap: 1px;
        grid-row-gap: 5px;
    }

    /* Grid areas */
    header {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
    }

    nav {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 2;
        grid-row-end: 4;
    }

    main {
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 2;
        grid-row-end: 3;
    }

    aside {

        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 2;
        grid-row-end: 3;
    }

    footer {
        grid-column-start: 2;
        grid-column-end: 4;
        grid-row-start: 3;
        grid-row-end: 4;
    }
}

